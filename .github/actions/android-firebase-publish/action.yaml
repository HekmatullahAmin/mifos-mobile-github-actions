name: 'Firebase App Distribution'
description: 'Publish Android app to Firebase App Distribution'
inputs:
  package_name:
    description: 'Name of the Android project module'
    type: string
    required: true


runs:
  using: "composite"
  steps:
    # Basic setup steps
    - name: Checkout
      uses: actions/checkout@v4

    # Setup Java environment
    - name: Set up JDK 17
      uses: actions/setup-java@v4.2.2
      with:
        distribution: 'temurin'
        java-version: '17'

    # Configure Gradle
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    # Setup Ruby for Fastlane automation
    - name: Configure Ruby
      uses: ruby/setup-ruby@a2bbe5b1b236842c1cb7dd11e8e3b51e0a616acc # v1.202.0
      with:
        bundler-cache: true

    # Install Fastlane and required plugins for deployment automation
    - name: Install Fastlane
      shell: bash
      run: |
        gem install bundler:2.2.27
        bundle install --jobs 4 --retry 3
        bundle exec fastlane add_plugin firebase_app_distribution
        bundle exec fastlane add_plugin increment_build_number

    # Retrieve built Android artifacts
    - name: Download Android Artifact
      uses: actions/download-artifact@v4
      with:
        name: android-app
        path: ./android-artifacts

    # Debug: List downloaded artifacts
    - name: List downloaded artifacts
      shell: bash
      run: |
        ls -R ./android-artifacts

    # Get changelog for Firebase distribution
    - name: Download Beta Changelog
      uses: actions/download-artifact@v4
      with:
        name: beta-changelog

    # Organize files for Firebase deployment
    - name: Move APK to build directory
      shell: bash
      run: |
        mkdir -p ./${{ inputs.package_name }}/build/outputs/apk/prod/release/
        mv ./android-artifacts/prod/release/${{ inputs.package_name }}-prod-release.apk ./${{ inputs.package_name }}/build/outputs/apk/prod/release/


    # Deploy to Firebase App Distribution
    - name: ☁️ Deploy to Firebase
      shell: bash
      env:
        VERSION_CODE: ${{ needs.generate_release_info.outputs.version_code }}
      run: bundle exec fastlane android deploy_on_firebase