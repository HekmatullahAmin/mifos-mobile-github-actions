name: 'Play Store Publish'
description: 'Publish Android app to Google Play Store'

inputs:
  release-type:
    description: 'Type of release (internal/beta)'
    required: false
    default: 'internal'
  package_name:
    description: 'Name of the Android project module'
    type: string
    required: true
  version_code:
    description: 'Version code of the release'
    type: string
    required: true

runs:
  using: 'composite'
  steps:
    # Checkout with full history for versioning
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Setup Java environment
    - name: Set up JDK 17
      uses: actions/setup-java@v4.2.2
      with:
        distribution: 'temurin'
        java-version: '17'

    # Setup Ruby for Fastlane
    - name: Configure Ruby
      uses: ruby/setup-ruby@a2bbe5b1b236842c1cb7dd11e8e3b51e0a616acc # v1.202.0
      with:
        bundler-cache: true

    # Install Fastlane and plugins for Play Store deployment
    - name: Install Fastlane
      run: |
        gem install bundler:2.2.27
        bundle install --jobs 4 --retry 3
        bundle exec fastlane add_plugin firebase_app_distribution
        bundle exec fastlane add_plugin increment_build_number

    # Setup Gradle build tool
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    # Prepare necessary secrets
    - uses: ./.github/actions/decrypt-secrets
      name: Inflate Secrets
      with:
        keystore: ${{ secrets.UPLOAD_KEYSTORE_FILE }}
        google-services: ${{ secrets.GOOGLESERVICES }}
        playstore-creds: ${{ secrets.PLAYSTORECREDS }}
        firebase-creds: ${{ secrets.FIREBASECREDS }}

    # Build Android App Bundle for Play Store
    - name: Build Release
      env:
        KEYSTORE_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_FILE_PASSWORD }}
        KEYSTORE_ALIAS: ${{ secrets.UPLOAD_KEYSTORE_ALIAS }}
        KEYSTORE_ALIAS_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_ALIAS_PASSWORD }}
        VERSION_CODE: ${{ inputs.version_code }}
      run: |
        ./gradlew :${{ inputs.package_name }}:bundleRelease

    # Save AAB files as artifacts
    - name: Archive Build
      uses: actions/upload-artifact@v4
      with:
        name: release-aabs
        path: ./**/*.aab

    # Deploy to Play Store Internal testing track
    - name: Deploy to Playstore Internal
      run: bundle exec fastlane deploy_internal

    # Promote to beta if specified
    - name: Promote Internal to Beta
      if: ${{ inputs.release-type == 'beta' }}
      run: bundle exec fastlane promote_to_beta