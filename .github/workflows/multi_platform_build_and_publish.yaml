name: Multi-Platform App Build and Publish

on:
  workflow_call:
    inputs:
      release_type:
        type: string
        default: 'internal'
        description: Release Type
      
      publish_android:
        type: boolean
        default: false
        description: Publish Android App On Play Store

      android_package_name:
        description: 'Name of the Android project module'
        type: string
        required: true

permissions:
  contents: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Generate release information
  generate_release_info:
    name: Generate Release Info
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.rel_number.outputs.version }}
      version_code: ${{ steps.rel_number.outputs.version-code }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Java environment
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      # Configure Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Generate version number
      - uses: ./.github/actions/create-release-number
        name: Create Release Number
        id: rel_number

      # Create release notes
      - uses: ./.github/actions/create-release-notes
        name: Create Release Notes
        with:
          tag-name: ${{ steps.rel_number.outputs.version }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}

      # Save GitHub changelog
      - name: Upload GitHub Changelog
        uses: actions/upload-artifact@v4
        with:
          name: git-changelog
          path: './${{inputs.android_package_name}}/build/outputs/changelogGithub'

      # Save beta changelog
      - name: Upload Beta Changelog
        uses: actions/upload-artifact@v4
        with:
          name: beta-changelog
          path: './${{inputs.android_package_name}}/build/outputs/changelogBeta'

  # Build and publish web app
  build_android:
    name: Build Android Application
    runs-on: ubuntu-latest
    needs: [ generate_release_info ]
    steps:
      # Check out repository code
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/android-release-build
        with:
          package_name: ${{ inputs.android_package_name }}
          version_code: ${{ needs.generate_release_info.outputs.version_code }}
          google_services: ${{ secrets.GOOGLESERVICES }}
          playstore_creds: ${{ secrets.PLAYSTORECREDS }}
          firebase_creds: ${{ secrets.FIREBASECREDS }}
          keystore_file_path: ${{ secrets.ORIGINAL_KEYSTORE_FILE }}
          keystore_password: ${{ secrets.ORIGINAL_KEYSTORE_FILE_PASSWORD }}
          keystore_alias: ${{ secrets.ORIGINAL_KEYSTORE_ALIAS }}
          keystore_alias_password: ${{ secrets.ORIGINAL_KEYSTORE_ALIAS_PASSWORD }}

  # Publish Android app on Firebase App Distribution
  publish_android_on_firebase:
    name: Deploy Android App On Firebase
    needs: [ build_android, generate_release_info ]
    runs-on: macos-latest
    steps:
      # Basic setup steps
      - name: Checkout
        uses: actions/checkout@v4

      # Setup Java environment
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'temurin'
          java-version: '17'

      # Configure Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Setup Ruby for Fastlane automation
      - name: Configure Ruby
        uses: ruby/setup-ruby@a2bbe5b1b236842c1cb7dd11e8e3b51e0a616acc # v1.202.0
        with:
          bundler-cache: true

      # Install Fastlane and required plugins for deployment automation
      - name: Install Fastlane
        run: |
          gem install bundler:2.2.27
          bundle install --jobs 4 --retry 3
          bundle exec fastlane add_plugin firebase_app_distribution
          bundle exec fastlane add_plugin increment_build_number

      # Retrieve built Android artifacts
      - name: Download Android Artifact
        uses: actions/download-artifact@v4
        with:
          name: android-app
          path: ./android-artifacts

      # Debug: List downloaded artifacts
      - name: List downloaded artifacts
        run: |
          ls -R ./android-artifacts

      # Get changelog for Firebase distribution
      - name: Download Beta Changelog
        uses: actions/download-artifact@v4
        with:
          name: beta-changelog

      # Organize files for Firebase deployment
      - name: Move APK to build directory
        run: |
          mkdir -p ./${{inputs.android_package_name}}/build/outputs/apk/prod/release/
          mv ./android-artifacts/prod/release/${{inputs.android_package_name}}-prod-release.apk ./${{inputs.android_package_name}}/build/outputs/apk/prod/release/
          mv ./changelogBeta ./${{inputs.android_package_name}}/build/outputs/


      # Deploy to Firebase App Distribution
      - name: ☁️ Deploy to Firebase
        env:
          VERSION_CODE: ${{ needs.generate_release_info.outputs.version_code }}
        run: bundle exec fastlane android deploy_on_firebase

  # Publish Android app on Play Store
  publish_android_on_playstore:
    name: Publish Android App On Play Store
    needs: [ build_android, generate_release_info ]
    if: inputs.publish_android
    runs-on: macos-latest
    steps:
      # Checkout with full history for versioning
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Java environment
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'temurin'
          java-version: '17'

      # Setup Ruby for Fastlane
      - name: Configure Ruby
        uses: ruby/setup-ruby@a2bbe5b1b236842c1cb7dd11e8e3b51e0a616acc # v1.202.0
        with:
          bundler-cache: true

      # Install Fastlane and plugins for Play Store deployment
      - name: Install Fastlane
        run: |
          gem install bundler:2.2.27
          bundle install --jobs 4 --retry 3
          bundle exec fastlane add_plugin firebase_app_distribution
          bundle exec fastlane add_plugin increment_build_number

      # Setup Gradle build tool
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Prepare necessary secrets
      - uses: ./.github/actions/inflate-secrets
        name: Inflate Secrets
        with:
          keystore: ${{ secrets.UPLOAD_KEYSTORE_FILE }}
          google-services: ${{ secrets.GOOGLESERVICES }}
          playstore-creds: ${{ secrets.PLAYSTORECREDS }}
          firebase-creds: ${{ secrets.FIREBASECREDS }}

      # Build Android App Bundle for Play Store
      - name: Build Release
        env:
          KEYSTORE_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_FILE_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.UPLOAD_KEYSTORE_ALIAS }}
          KEYSTORE_ALIAS_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_ALIAS_PASSWORD }}
          VERSION_CODE: ${{ needs.generate_release_info.outputs.version_code }}
        run: |
          ./gradlew :${{inputs.android_package_name}}:bundleRelease

      # Save AAB files as artifacts
      - name: Archive Build
        uses: actions/upload-artifact@v4
        with:
          name: release-aabs
          path: ./**/*.aab

      # Deploy to Play Store Internal testing track
      - name: Deploy to Playstore Internal
        run: bundle exec fastlane deploy_internal

      # Promote to beta if specified
      - name: Promote Internal to Beta
        if: github.event.inputs.release_type == 'beta'
        run: bundle exec fastlane promote_to_beta